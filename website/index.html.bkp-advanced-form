<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Decent Movies</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
 
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <!-- DataTables JS -->
  <script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.js"></script>

  <!-- DataTables CSS -->
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.css"/>
  <style>

    /* CSS for back to top button */
    .back-to-top {
      position: fixed;
      bottom: 20px;
      right: 20px;
      display: none;
    }

    .footer {
      position: relative;
      bottom: 0;
      width: 100%;
      /* Set the fixed height of the footer here */
      height: 60px;
      line-height: 60px; /* Vertically center the text there */
    }

    .dataTables_scrollHead {
      z-index: 1001 !important; /* Adjust the z-index value as needed */
    }

    /* CSS for advanced search */
    #advancedSearchModal {
      display: none;
      position: fixed;
      z-index: 1050;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.4);
    }

    #advancedSearchModal .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
    }


  </style>
</head>
<body>

  <nav class="navbar bg-dark navbar-expand-lg bg-body-tertiary" data-bs-theme="dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Banshee</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <!-- Genres will be loaded here -->
        </ul>
        <button type="button" class="btn btn-primary" id="advancedSearchBtn">Advanced Search</button>
      </div>
    </div>
  </nav>

   <!-- Advanced Search Modal -->
   <div id="advancedSearchModal">
    <div class="modal-content">
      <form id="advancedSearchForm">
        <div class="mb-3">
          <label for="fromYear" class="form-label">From Year:</label>
          <input type="text" class="form-control" id="fromYear" placeholder="Enter From Year">
        </div>
        <div class="mb-3">
          <label for="toYear" class="form-label">To Year:</label>
          <input type="text" class="form-control" id="toYear" placeholder="Enter To Year">
        </div>
        <div class="mb-3">
          <label class="form-label">Genres:</label><br>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Action</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="adventureGenre" value="Adventure">
            <label class="form-check-label" for="adventureGenre">Adventure</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Comedy</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Crime</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Documentary</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Drama</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Fantasy</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Horor</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Mystery</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Science Fiction</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Thriller</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">War</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input genre-checkbox" type="checkbox" id="actionGenre" value="Action">
            <label class="form-check-label" for="actionGenre">Western</label>
          </div>
          <!-- Add more genre checkboxes as needed -->
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
      </form>
    </div>
  </div>

  <div class="container">

  <!-- Poster Modal -->
<div class="modal fade" id="posterModal" tabindex="-1" aria-labelledby="posterModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body">
        <!-- Image will be displayed here -->
      </div>
    </div>
  </div>
</div>

<div id="genreYearHeader" class="mb-4"></div> <!-- New div for the header -->

  <!-- Add this div above the table to hold the fixed header -->
  <div id="fixedHeaderContainer"></div>

  <!-- Table for displaying JSON data -->
  <div class="row mt-4">
    <div class="col">
      <!-- <h2>Movie Details</h2> -->
      <div class="table-responsive">
        <table class="table table-striped table-bordered" id="movieTable">
          <thead>
            <!-- Table headers will be dynamically generated -->
          </thead>
          <tbody>
            <!-- Table body will be dynamically populated -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Back to top button -->
  <button class="btn btn-primary back-to-top" id="backToTop">Back to Top</button>


<script>
  // Sample genres
  const genres = [
    { name: 'Action', dataUrl: 'https://banshee.craighoad.com/action' },
    { name: 'Adventure', dataUrl: 'https://banshee.craighoad.com/adventure' },
    { name: 'Comedy', dataUrl: 'https://banshee.craighoad.com/comedy' },
    { name: 'Crime', dataUrl: 'https://banshee.craighoad.com/crime' },
    { name: 'Documentary', dataUrl: 'https://banshee.craighoad.com/documentary' },
    { name: 'Drama', dataUrl: 'https://banshee.craighoad.com/drama' },
    { name: 'Fantasy', dataUrl: 'https://banshee.craighoad.com/fantasy' },
    { name: 'Horror', dataUrl: 'https://banshee.craighoad.com/horror' },
    { name: 'Mystery', dataUrl: 'https://banshee.craighoad.com/mystery' },
    { name: 'Science Fiction', dataUrl: 'https://banshee.craighoad.com/Science Fiction' },
    { name: 'Thriller', dataUrl: 'https://banshee.craighoad.com/thriller' },
    { name: 'War', dataUrl: 'https://banshee.craighoad.com/war' },
    { name: 'Western', dataUrl: 'https://banshee.craighoad.com/western' }
  ];

  const currentYear = new Date().getFullYear();
  const startYear = 1920; // Start year for movies

  genres.forEach(genre => {
    let dropdownHtml = `
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown-${genre.name}" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          ${genre.name}
        </a>
        <ul class="dropdown-menu" aria-labelledby="navbarDropdown-${genre.name}">
    `;
    
    for (let year = currentYear; year >= currentYear - 120; year--) {
      const filename = `${genre.name.toLowerCase()}_movies_${year}.json`;
      dropdownHtml += `
        <a class="dropdown-item" href="https://banshee.craighoad.com/${genre.name.toLowerCase()}/${year}/${filename}">${year}</a>
      `;
    }

    dropdownHtml += `</ul></li>`;
    $('.navbar-nav').append(dropdownHtml);
  });

  // Function to display movie details in a table
  function displayMovieDetails(data) {
    const tableHeaders = $('#movieTable thead');
    const tableBody = $('#movieTable tbody');

    // Clear existing table headers and body
    tableHeaders.empty();
    tableBody.empty();

    // Dynamically generate table headers from JSON data
    const headers = [
      "Title",
      "Overview",
      "Poster Path",
      "Release Date",
      "Popularity",
      "Vote Average",
      "Original Language",
      "Vote Count",
      "Vote Score",
      "Algorithm Score"
    ];
    const headerRow = $('<tr>');
    headers.forEach(header => {
      headerRow.append(`<th>${header}</th>`);
    });
    tableHeaders.append(headerRow);

    // Populate table body with JSON data
    data.forEach(movie => {
      const row = $('<tr>');
      headers.forEach(header => {
        if (header === 'Poster Path') {
          // Add the poster-image class to the image tag
          row.append(`<td><img src="https://image.tmdb.org/t/p/original/${movie[header]}" class="img-fluid poster-image" style="max-width: 100px;"></td>`);
        } else if (header === 'Overview') {
          const overviewId = `overview-${movie.id}`; // Unique ID for each overview
          row.append(`<td><button class="btn btn-link more-button" type="button" data-bs-toggle="collapse" data-bs-target="#${overviewId}" aria-expanded="false" aria-controls="${overviewId}">More</button><div class="collapse" id="${overviewId}">${movie[header]}</div></td>`);
        } else {
          row.append(`<td>${movie[header]}</td>`);
        }
      });
      tableBody.append(row);
    });

    // Initialize DataTables with sorting enabled and default sorting by Algorithm Score descending
    $('#movieTable').DataTable({
      "order": [[ headers.indexOf("Algorithm Score"), "desc" ]], // Default sorting by Algorithm Score in descending order
      "fixedHeader": true // Enable fixed header
    });
  }

// Function to fetch JSON data from URL and display movie details
function fetchAndDisplayData(url) {
    $.getJSON(url)
        .done(function(data) {
            // Check if DataTable instance already exists
            if ($.fn.DataTable.isDataTable('#movieTable')) {
                // Destroy existing DataTable instance
                $('#movieTable').DataTable().clear().destroy();
            }
            displayMovieDetails(data); // Display movie details in the table
        })
        .fail(function(jqxhr, textStatus, error) {
            console.log(`Request failed: ${textStatus}, ${error}`);
        });
}

// Initialize cards
$(document).ready(function() {

// Submit Advanced Search Form
$('#advancedSearchForm').submit(function(e) {
  e.preventDefault();
  const fromYear = parseInt($('#fromYear').val());
  const toYear = parseInt($('#toYear').val());
  const genres = [];
  $('.genre-checkbox:checked').each(function() {
    genres.push($(this).val());
  });
  console.log('From Year:', fromYear);
  console.log('To Year:', toYear);
  console.log('Genres:', genres);

  // Construct URLs based on search parameters
  const urls = [];
  genres.forEach(genre => {
    for (let year = fromYear; year <= toYear; year++) {
      const filename = `${genre.toLowerCase()}_movies_${year}.json`;
      const url = `https://s3.amazonaws.com/banshee.craighoad.com/${genre.toLowerCase()}/${year}/${filename}`;
      urls.push(url);
    }
  });

  // Fetch data from all URLs
  Promise.all(urls.map(url => fetch(url)))
    .then(responses => Promise.all(responses.map(response => response.json())))
    .then(data => {
      // Combine data from all responses into a single array
      const combinedData = data.reduce((acc, curr) => acc.concat(curr), []);
      console.log('Combined Data:', combinedData);
      // Display combined data in the DataTable
      displayMovieDetails(combinedData);
      // Close the modal
      $('#advancedSearchModal').css('display', 'none');
    })
    .catch(error => console.error('Error fetching data:', error));
});

    // Event listener for dropdown item click
    $('.dropdown-item').click(function(e) {
        e.preventDefault();
        const url = $(this).attr('href');
        const genre = $(this).closest('.dropdown-menu').prev('.dropdown-toggle').text().trim(); // Extract genre name from the dropdown
        const year = $(this).text().trim(); // Extract year from the dropdown item
        const headerText = `${genre} Movies ${year}`; // Generate the header text
        $('#genreYearHeader').html(`<h3 class="fw-bold">${headerText}</h3>`); // Update the header
        fetchAndDisplayData(url);
    });

    // Event listener for more button click
    $(document).on('click', '.more-button', function() {
        const target = $(this).data('target');
        $(target).collapse('toggle');
    });

    // Collapse overview text by default
    $('.collapse').collapse('hide');

    // Back to top button functionality
    $('#backToTop').click(function() {
        $('html, body').animate({ scrollTop: 0 }, 'slow');
    });

    // Show back to top button when scrolling down
    $(window).scroll(function() {
        if ($(this).scrollTop() > 200) {
            $('.back-to-top').fadeIn();
        } else {
            $('.back-to-top').fadeOut();
        }
    });

    // Function to handle click on poster images
    $(document).on('click', '.poster-image', function() {
        const imageUrl = $(this).attr('src');
        const imageHtml = `<img src="${imageUrl}" class="img-fluid">`;
        
        // Open the image in a modal
        $('#posterModal .modal-body').html(imageHtml);
        $('#posterModal').modal('show');
    });

   // Show Advanced Search Modal
   $('#advancedSearchBtn').click(function() {
      $('#advancedSearchModal').css('display', 'block');
    });

    // Hide Advanced Search Modal when clicking outside the modal
    $(window).click(function(event) {
      if (event.target == $('#advancedSearchModal')[0]) {
        $('#advancedSearchModal').css('display', 'none');
      }
    });

    // Submit Advanced Search Form
    $('#advancedSearchForm').submit(function(e) {
      e.preventDefault();
      const fromYear = $('#fromYear').val();
      const toYear = $('#toYear').val();
      const genres = [];
      $('.genre-checkbox:checked').each(function() {
        genres.push($(this).val());
      });
      console.log('From Year:', fromYear);
      console.log('To Year:', toYear);
      console.log('Genres:', genres);
      // You can perform further actions like fetching data based on the advanced search parameters here
      // For now, let's just close the modal
      $('#advancedSearchModal').css('display', 'none');
    });
});

</script>

  <footer class="footer py-3 my-4">
    <ul class="nav justify-content-center border-bottom">
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Home</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Features</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Contact</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">FAQs</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">About</a></li>
    </ul>
    <p class="text-center text-muted">&copy; Craig Hoad 2024, Banshee</p>
  </footer>

  <script type="text/javascript" src="https://cdn.datatables.net/fixedheader/3.2.0/js/dataTables.fixedHeader.min.js"></script>


</body>
</html>
